{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/UI/Button/Button.js","components/UI/Button/Button.module.css","containers/Auth/Auth.module.scss","components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","containers/Auth/Login.jsx"],"names":["input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","className","join","elementConfig","value","required","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","button","disabled","Button","btnType","onClick","clicked","children","spinner","Ldsring","Signin","state","controls","userName","type","placeholder","validation","minLength","valid","password","maxLength","isPass","inputChangedHandler","event","controlName","updatedControls","target","checkValidity","setState","submitHandler","preventDefault","onSignin","this","authRedirectPath","onSetAuthRedirectPath","formElementsArray","id","config","form","formElement","errorMessage","error","Error","authRedirect","isAuthenticated","to","Auth","SectionAccount","LoginHeight","AccountForm","PrimaryHeading","Row","LinkText","activeClassName","active","Gbgcolor","onSubmit","loading","Link","Component","connect","login","token","dispatch","actions"],"mappings":"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","file":"static/js/3.dd0d5b0a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [ classes.InputElement ];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={ inputClasses.join(' ') }\r\n                { ...props.elementConfig }\r\n                value={ props.value }\r\n                required={props.required}\r\n                onChange={ props.changed }\r\n                 />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={ inputClasses.join(' ') }\r\n                { ...props.elementConfig }\r\n                value={ props.value }\r\n                onChange={ props.changed } />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={ inputClasses.join(' ') }\r\n                    value={ props.value }\r\n                    onChange={ props.changed }>\r\n                    { props.elementConfig.options.map(option => (\r\n                        <option key={ option.value } value={ option.value }>\r\n                            { option.displayValue }\r\n                        </option>\r\n                    )) }\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={ inputClasses.join(' ') }\r\n                { ...props.elementConfig }\r\n                value={ props.value }\r\n                onChange={ props.changed } />;\r\n    }\r\n\r\n    return (\r\n        <div className={ classes.Input }>\r\n            <label className={ classes.Label }>{ props.label }</label>\r\n            { inputElement }\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__MNdNZ\",\"Label\":\"Input_Label__zrISN\",\"InputElement\":\"Input_InputElement__2a-Es\",\"Invalid\":\"Input_Invalid__1-c47\"};","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1tDb0\",\"Success\":\"Button_Success__2Jv5P\",\"Danger\":\"Button_Danger__3GOOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Auth_row__248Tq\",\"col1of2\":\"Auth_col1of2__35-do\",\"col-1-of-3\":\"Auth_col-1-of-3__1XJ_y\",\"col-2-of-3\":\"Auth_col-2-of-3__4YvR-\",\"col-1-of-4\":\"Auth_col-1-of-4__1WM-4\",\"col-2-of-4\":\"Auth_col-2-of-4__pYier\",\"col-3-of-4\":\"Auth_col-3-of-4__btMdV\",\"Auth\":\"Auth_Auth__3lqiI\",\"LinkText\":\"Auth_LinkText__2UH7u\",\"Link\":\"Auth_Link__26g8S\",\"Row\":\"Auth_Row__1UkDv\",\"Gbgcolor\":\"Auth_Gbgcolor__3P1XY\",\"active\":\"Auth_active__2FX51\",\"PrimaryHeading\":\"Auth_PrimaryHeading__zmnju\",\"Error\":\"Auth_Error__3-pcR\",\"SectionAccount\":\"Auth_SectionAccount__1g-yi\",\"Account\":\"Auth_Account__HjMAV\",\"LoginHeight\":\"Auth_LoginHeight__3iUhe\",\"AccountForm\":\"Auth_AccountForm__zWcuV\"};","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Ldsring}><div></div><div></div><div></div><div></div></div>\r\n);\r\n\r\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ldsring\":\"Spinner_Ldsring__1x2Lh\"};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\nimport { checkValidity } from '../../shared/utility';\r\nimport classes from './Auth.module.scss'\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Signin extends Component {\r\n\tstate = {\r\n\t\tcontrols: {\r\n\t\t\tuserName: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\tplaceholder: 'Mail Address or Phone Number '\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tminLength: 0\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'password',\r\n\t\t\t\t\tplaceholder: 'Password'\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tminLength: 0,\r\n\t\t\t\t\tmaxLength: 120,\r\n\t\t\t\t\tisPass: false\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tif (this.props.authRedirectPath !== '/') {\r\n\t\t\tthis.props.onSetAuthRedirectPath();\r\n\t\t}\r\n\t}\r\n\tinputChangedHandler = (event, controlName) => {\r\n\t\tconst updatedControls = {\r\n\t\t\t...this.state.controls,\r\n\t\t\t[ controlName ]: {\r\n\t\t\t\t...this.state.controls[ controlName ],\r\n\t\t\t\tvalue: event.target.value,\r\n\t\t\t\tvalid: checkValidity(event.target.value, this.state.controls[ controlName ].validation),\r\n\t\t\t\ttouched: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({ controls: updatedControls })\r\n\t}\r\n\tsubmitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onSignin(this.state.controls.userName.value, this.state.controls.password.value);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst formElementsArray = [];\r\n\t\tfor (let key in this.state.controls) {\r\n\t\t\tformElementsArray.push({\r\n\t\t\t\tid: key,\r\n\t\t\t\tconfig: this.state.controls[ key ]\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet form = formElementsArray.map(formElement => (\r\n\t\t\t<Input\r\n\t\t\t\tkey={ formElement.id }\r\n\t\t\t\telementType={ formElement.config.elementType }\r\n\t\t\t\telementConfig={ formElement.config.elementConfig }\r\n\t\t\t\tvalue={ formElement.config.value }\r\n\t\t\t\trequired={ formElement.config.validation.required }\r\n\t\t\t\tinvalid={ !formElement.config.valid }\r\n\t\t\t\tshouldValidate={ formElement.config.validation }\r\n\t\t\t\ttouched={ formElement.config.touched }\r\n\t\t\t\tchanged={ (event) => this.inputChangedHandler(event, formElement.id) } />\r\n\r\n\t\t))\r\n\r\n\t\tlet errorMessage = null;\r\n\r\n\t\tif (this.props.error) {\r\n\t\t\terrorMessage = (\r\n\t\t\t\t<p className={ classes.Error }>Some thing Went Wrong</p>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tlet authRedirect = null;\r\n\t\tif (this.props.isAuthenticated) {\r\n\t\t\tauthRedirect = <Redirect to={ this.props.authRedirectPath } />\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={ classes.Auth }>\r\n\t\t\t\t<div className={ classes.SectionAccount }>\r\n\t\t\t\t\t<div className={ classes.LoginHeight }>\r\n\t\t\t\t\t\t<div className={ classes.AccountForm }>\r\n\t\t\t\t\t\t\t{ authRedirect }\r\n\t\t\t\t\t\t\t<h2 className={ classes.PrimaryHeading }>Welcome Back </h2>\r\n\t\t\t\t\t\t\t<div className={ classes.Row }>\r\n\r\n\t\t\t\t\t\t\t\t<span className={ classes.LinkText }>\t<NavLink to=\"/login\" activeClassName={ classes.active } className={ classes.Gbgcolor }>Login</NavLink></span>\r\n\t\t\t\t\t\t\t\t<span className={ classes.LinkText }>\t<NavLink to=\"/auth\" activeClassName={ classes.active } className={ classes.Gbgcolor }>New account</NavLink></span>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<form onSubmit={ this.submitHandler }>\r\n\t\t\t\t\t\t\t\t{ form }\r\n\t\t\t\t\t\t\t\t{ errorMessage }\r\n\t\t\t\t\t\t\t\t<Button btnType=\"Success\"> Log in { this.props.loading ? <Spinner /> : '' } </Button>\r\n\t\t\t\t\t\t\t\t<h4 className={ classes.LinkText }> <NavLink to=\"/\" className={ classes.Link }>Forgot Password?</NavLink>\t</h4>\r\n\t\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tloading: state.login.loading,\r\n\t\terror: state.login.error,\r\n\t\tisAuthenticated: state.login.token !== null,\r\n\t\tauthRedirectPath: state.login.authRedirectPath\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonSignin: (userName, password) => dispatch(actions.login(userName, password)),\r\n\t\tonSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);"],"sourceRoot":""}